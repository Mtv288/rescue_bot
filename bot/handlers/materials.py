from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from bot.states import AddMaterial

router = Router()
materials = []

@router.callback_query(F.data == "add_material")
async def add_material_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:")
    await state.set_state(AddMaterial.title)
    await callback.answer()

@router.message(AddMaterial.title)
async def get_title(message: Message, state: FSMContext):
    await state.update_data(title=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ URL:")
    await state.set_state(AddMaterial.url)

@router.message(AddMaterial.url)
async def save_material(message: Message, state: FSMContext):
    data = await state.get_data()
    materials.append((data["title"], message.text))
    await message.answer("–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω.")
    await state.clear()

@router.message(Command("–º–∞—Ç–µ—Ä–∏–∞–ª—ã"))
async def show_materials(message: Message):
    if not materials:
        await message.answer("–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        return
    text = "üìö –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n" + "\n".join(
        f"- <a href='{url}'>{title}</a>" for title, url in materials
    )
    await message.answer(text, parse_mode="HTML", disable_web_page_preview=False)


@router.callback_query(F.data == "add_url_material")
async def ask_direct_url(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª:")
    await state.set_state(AddMaterial.direct_url)
    await callback.answer()

@router.message(AddMaterial.direct_url)
async def save_direct_url(message: Message, state: FSMContext):
    url = message.text.strip()
    if not url.startswith("http"):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http).")
        return
    materials.append((url, url))  # –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã
    await message.answer("‚úÖ –°—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.")
    await state.clear()

@router.callback_query(F.data == "materials")
async def show_materials_callback(callback: CallbackQuery):
    if not materials:
        await callback.message.answer("–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        await callback.answer()  # –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏"
        return
    text = "üìö –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n" + "\n".join(
        f"- <a href='{url}'>{title}</a>" for title, url in materials
    )
    await callback.message.answer(text, parse_mode="HTML", disable_web_page_preview=False)
    await callback.answer()