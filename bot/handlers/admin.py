from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.states import AssignRole
from bot.database.base import Session
from bot.database.models import User
from bot.config import INITIAL_ADMIN_CODE
from bot.keyboards.inline_buttons import main_menu_keyboard, admin_menu_keyboard

router = Router()

# ‚îÄ‚îÄ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚îÄ‚îÄ
@router.message(Command("setup_admin"))
async def setup_admin(message: Message, command: Command):
    if not command.args:
        return await message.answer("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /setup_admin <–∫–æ–¥>")

    code = command.args.strip()
    if code != INITIAL_ADMIN_CODE:
        return await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥.")

    session = Session()
    user = session.query(User).filter_by(tg_id=message.from_user.id).first()
    if not user:
        user = User(
            tg_id=message.from_user.id,
            call_sign=message.from_user.username or str(message.from_user.id),
            role="admin",
            approved=True
        )
        session.add(user)
    else:
        user.role = "admin"
        user.approved = True

    session.commit()
    session.close()
    await message.answer("‚úÖ –í—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")

# ‚îÄ‚îÄ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ ‚îÄ‚îÄ
@router.message(Command("–Ω–∞–∑–Ω–∞—á–∏—Ç—å"))
async def assign_start(message: Message, state: FSMContext):
    session = Session()
    caller = session.query(User).filter_by(tg_id=message.from_user.id).first()
    session.close()
    if not caller or caller.role not in ("admin", "chief"):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.")

    await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å:")
    await state.set_state(AssignRole.user_id)

@router.message(AssignRole.user_id, F.text.regexp(r"^\d+$"))
async def assign_get_user(message: Message, state: FSMContext):
    await state.update_data(user_id=int(message.text))
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å (admin, chief, snm, spg, rescuer):")
    await state.set_state(AssignRole.role)

@router.message(AssignRole.role, F.text)
async def assign_set_role(message: Message, state: FSMContext):
    data = await state.get_data()
    session = Session()
    user = session.query(User).filter_by(id=data["user_id"]).first()
    if user:
        new_role = message.text.strip().lower()
        if new_role not in ("admin", "chief", "snm", "spg", "rescuer"):
            await message.answer("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        else:
            user.role = new_role
            session.commit()
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.call_sign} –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å: {user.role}")
    else:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    session.close()
    await state.clear()

# ‚îÄ‚îÄ –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚îÄ‚îÄ
@router.message(Command("—É—Ç–≤–µ—Ä–¥–∏—Ç—å"))
async def approve_user(message: Message, bot: Bot):
    session = Session()
    caller = session.query(User).filter_by(tg_id=message.from_user.id).first()

    if not caller or caller.role not in ("admin", "chief"):
        session.close()
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–æ–∫.")

    parts = message.text.split()
    if len(parts) != 2 or not parts[1].isdigit():
        session.close()
        return await message.answer("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /—É—Ç–≤–µ—Ä–¥–∏—Ç—å <user_id>")

    user_id = int(parts[1])
    user = session.query(User).filter_by(id=user_id).first()

    if not user:
        session.close()
        return await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    user.approved = True
    session.commit()
    await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.call_sign} –æ–¥–æ–±—Ä–µ–Ω.")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    try:
        if user.role == "admin":
            keyboard = admin_menu_keyboard()
            text = f"üëã –ü—Ä–∏–≤–µ—Ç, {user.call_sign}! –≠—Ç–æ –≤–∞—à–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é:"
        else:
            keyboard = main_menu_keyboard(user.role)
            text = f"üëã –ü—Ä–∏–≤–µ—Ç, {user.call_sign}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–æ—Ç –≤–∞—à–µ –º–µ–Ω—é:"

        await bot.send_message(
            chat_id=user.tg_id,
            text=text,
            reply_markup=keyboard
        )
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")

    session.close()
